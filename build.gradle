buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
        classpath 'de.undercouch:gradle-download-task:1.2'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'de.undercouch.download'

ext.buildProps = file "build.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

repositories {
    jcenter()
    maven {
        name = "forge"
        url = "http://files.minecraftforge.net/maven"
    }
	maven {
		// OpenComputers maven repo
		url = "http://maven.cil.li/"
	}
    ivy {
        name = "CoFHLib"
        artifactPattern "http://addons-origin.cursecdn.com/files/2420/671/[module]-[revision].[ext]"
    }
    maven {
        name = "covers1624"
        url = "http://maven.covers1624.net/"
    }
}

dependencies {
    deobfCompile group: "li.cil.oc", name: "OpenComputers", version: "MC${config.version.minecraft}-${config.version.oc.api}", classifier: "api"
    deobfCompile group: "crafttweaker", name: "CraftTweaker-${config.version.minecraft}", version: config.version.crafttweaker
    deobfCompile group: "cofh", name: "CoFHLib", version: config.version.minecraft + "-" + config.version.cofhlib, classifier: "universal"
}

group = "minechem"
archivesBaseName = "Minechem"

sourceCompatibility = "1.8"
targetCompatibility = "1.8"

minecraft {
    version = config.version.forge
    mappings = config.version.mcp
    runDir = "run"

    replace "@MAJOR@", config.version.mod.major
    replace "@MINOR@", config.version.mod.minor

    if (System.getenv("BUILD_NUMBER") != null) {
        replace "@BUILD@", System.getenv("BUILD_NUMBER")
    }
    else
    {
        replace "@BUILD@", "ManuallyBuilt"
    }
}

processResources {
    from 'build.properties'
}

allprojects {
    version = "${config.version.minecraft}-${config.version.mod.major}.${config.version.mod.minor}"

    if (System.getenv("BUILD_NUMBER") != null) {
        version += ".${System.getenv("BUILD_NUMBER")}"
    } else {
        version += "-ManuallyBuilt"
    }

    jar {
    	manifest {
			attributes 'FMLCorePlugin': 'minechem.asm.LoadingPlugin'
			attributes 'FMLCorePluginContainsFMLMod': 'true'
		}
        destinationDir = file (rootProject.getRootDir().getPath() + '/output')
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifact jar
            }
        }
        repositories {
            maven {
                url "file://var/www/maven"
            }
        }
    }
}

sourceSets {
    main {
        resources {
            exclude '**/xcf/*'
            exclude 'resources/assets/minechem/xcf'
        }
        java {
            srcDir 'src/fontbox/src/main/java'
        }
    }
}

task apiZip(type: Zip) {
    classifier = 'api'
    from sourceSets*.allSource
    include 'minechem/api/**'
    destinationDir = file 'output'
}

build.dependsOn "apiZip", "getLibraries"
